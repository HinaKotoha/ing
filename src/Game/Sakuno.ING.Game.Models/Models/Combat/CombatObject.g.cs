//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.Collections.Generic;
using Sakuno.ING.Game.Models.MasterData;

namespace Sakuno.ING.Game.Models.Combat
{
    partial class Side
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_formation = new PropertyChangedEventArgs(nameof(Formation));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private Formation _formation;
        public Formation Formation
        {
            get => _formation;
            private set => Set(ref _formation, value, __eventArgs_formation);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_detection = new PropertyChangedEventArgs(nameof(Detection));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private Detection? _detection;
        public Detection? Detection
        {
            get => _detection;
            private set => Set(ref _detection, value, __eventArgs_detection);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_damageRate = new PropertyChangedEventArgs(nameof(DamageRate));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private double _damageRate;
        public double DamageRate
        {
            get => _damageRate;
            private set => Set(ref _damageRate, value, __eventArgs_damageRate);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_sunkCount = new PropertyChangedEventArgs(nameof(SunkCount));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private int _sunkCount;
        public int SunkCount
        {
            get => _sunkCount;
            private set => Set(ref _sunkCount, value, __eventArgs_sunkCount);
        }
    }
    partial class BattleParticipant
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_isEscaped = new PropertyChangedEventArgs(nameof(IsEscaped));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool _isEscaped;
        public bool IsEscaped
        {
            get => _isEscaped;
            private set => Set(ref _isEscaped, value, __eventArgs_isEscaped);
        }
    }
    partial class Battle
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_engagement = new PropertyChangedEventArgs(nameof(Engagement));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private Engagement _engagement;
        public Engagement Engagement
        {
            get => _engagement;
            private set => Set(ref _engagement, value, __eventArgs_engagement);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_npcFleet = new PropertyChangedEventArgs(nameof(NpcFleet));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private IReadOnlyList<BattleParticipant> _npcFleet;
        public IReadOnlyList<BattleParticipant> NpcFleet
        {
            get => _npcFleet;
            private set => Set(ref _npcFleet, value, __eventArgs_npcFleet);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_enemy = new PropertyChangedEventArgs(nameof(Enemy));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private Side _enemy;
        public Side Enemy
        {
            get => _enemy;
            private set => Set(ref _enemy, value, __eventArgs_enemy);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_incomplete = new PropertyChangedEventArgs(nameof(Incomplete));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool _incomplete;
        public bool Incomplete
        {
            get => _incomplete;
            private set => Set(ref _incomplete, value, __eventArgs_incomplete);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_rank = new PropertyChangedEventArgs(nameof(Rank));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private BattleRank? _rank;
        public BattleRank? Rank
        {
            get => _rank;
            private set => Set(ref _rank, value, __eventArgs_rank);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_shellingPhase1 = new PropertyChangedEventArgs(nameof(ShellingPhase1));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private ShellingPhase _shellingPhase1;
        public ShellingPhase ShellingPhase1
        {
            get => _shellingPhase1;
            private set => Set(ref _shellingPhase1, value, __eventArgs_shellingPhase1);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_shellingPhase2 = new PropertyChangedEventArgs(nameof(ShellingPhase2));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private ShellingPhase _shellingPhase2;
        public ShellingPhase ShellingPhase2
        {
            get => _shellingPhase2;
            private set => Set(ref _shellingPhase2, value, __eventArgs_shellingPhase2);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_shellingPhase3 = new PropertyChangedEventArgs(nameof(ShellingPhase3));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private ShellingPhase _shellingPhase3;
        public ShellingPhase ShellingPhase3
        {
            get => _shellingPhase3;
            private set => Set(ref _shellingPhase3, value, __eventArgs_shellingPhase3);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_openingAswPhase = new PropertyChangedEventArgs(nameof(OpeningAswPhase));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private ShellingPhase _openingAswPhase;
        public ShellingPhase OpeningAswPhase
        {
            get => _openingAswPhase;
            private set => Set(ref _openingAswPhase, value, __eventArgs_openingAswPhase);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_openingTorpedoPhase = new PropertyChangedEventArgs(nameof(OpeningTorpedoPhase));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private TorpedoPhase _openingTorpedoPhase;
        public TorpedoPhase OpeningTorpedoPhase
        {
            get => _openingTorpedoPhase;
            private set => Set(ref _openingTorpedoPhase, value, __eventArgs_openingTorpedoPhase);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_closingTorpedoPhase = new PropertyChangedEventArgs(nameof(ClosingTorpedoPhase));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private TorpedoPhase _closingTorpedoPhase;
        public TorpedoPhase ClosingTorpedoPhase
        {
            get => _closingTorpedoPhase;
            private set => Set(ref _closingTorpedoPhase, value, __eventArgs_closingTorpedoPhase);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_aerialPhase = new PropertyChangedEventArgs(nameof(AerialPhase));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private AerialPhase _aerialPhase;
        public AerialPhase AerialPhase
        {
            get => _aerialPhase;
            private set => Set(ref _aerialPhase, value, __eventArgs_aerialPhase);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_aerialPhase2 = new PropertyChangedEventArgs(nameof(AerialPhase2));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private AerialPhase _aerialPhase2;
        public AerialPhase AerialPhase2
        {
            get => _aerialPhase2;
            private set => Set(ref _aerialPhase2, value, __eventArgs_aerialPhase2);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_landBaseJetPhase = new PropertyChangedEventArgs(nameof(LandBaseJetPhase));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private AerialPhase _landBaseJetPhase;
        public AerialPhase LandBaseJetPhase
        {
            get => _landBaseJetPhase;
            private set => Set(ref _landBaseJetPhase, value, __eventArgs_landBaseJetPhase);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_jetPhase = new PropertyChangedEventArgs(nameof(JetPhase));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private AerialPhase _jetPhase;
        public AerialPhase JetPhase
        {
            get => _jetPhase;
            private set => Set(ref _jetPhase, value, __eventArgs_jetPhase);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_landBasePhases = new PropertyChangedEventArgs(nameof(LandBasePhases));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private IReadOnlyList<LandBasePhase> _landBasePhases;
        public IReadOnlyList<LandBasePhase> LandBasePhases
        {
            get => _landBasePhases;
            private set => Set(ref _landBasePhases, value, __eventArgs_landBasePhases);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_supportPhase = new PropertyChangedEventArgs(nameof(SupportPhase));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private SupportPhase _supportPhase;
        public SupportPhase SupportPhase
        {
            get => _supportPhase;
            private set => Set(ref _supportPhase, value, __eventArgs_supportPhase);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_nightPhase = new PropertyChangedEventArgs(nameof(NightPhase));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private NightPhase _nightPhase;
        public NightPhase NightPhase
        {
            get => _nightPhase;
            private set => Set(ref _nightPhase, value, __eventArgs_nightPhase);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_combinedNightPhase1 = new PropertyChangedEventArgs(nameof(CombinedNightPhase1));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private NightPhase _combinedNightPhase1;
        public NightPhase CombinedNightPhase1
        {
            get => _combinedNightPhase1;
            private set => Set(ref _combinedNightPhase1, value, __eventArgs_combinedNightPhase1);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_combinedNightPhase2 = new PropertyChangedEventArgs(nameof(CombinedNightPhase2));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private NightPhase _combinedNightPhase2;
        public NightPhase CombinedNightPhase2
        {
            get => _combinedNightPhase2;
            private set => Set(ref _combinedNightPhase2, value, __eventArgs_combinedNightPhase2);
        }

        [EditorBrowsable(EditorBrowsableState.Never)]
        private static readonly PropertyChangedEventArgs __eventArgs_npcPhase = new PropertyChangedEventArgs(nameof(NpcPhase));
        [EditorBrowsable(EditorBrowsableState.Never)]
        private NightPhase _npcPhase;
        public NightPhase NpcPhase
        {
            get => _npcPhase;
            private set => Set(ref _npcPhase, value, __eventArgs_npcPhase);
        }
    }
}
